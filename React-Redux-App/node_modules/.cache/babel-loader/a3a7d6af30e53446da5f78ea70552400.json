{"ast":null,"code":"import axios from 'axios';\nexport const FETCHING_CAT_DATA = \"FETCHING_CAT_DATA\";\nexport const FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\";\nexport const FETCH_DATA_FAIL = \"FETCH_DATA_FAIL\";\nexport const getCatFact = () => dispatch => {\n  dispatch({\n    type: FETCHING_CAT_DATA\n  });\n  axios.get('https://cors-anywhere.herokuapp.com/https://cat-fact.herokuapp.com/facts/random/').then(response => {\n    console.log(response);\n    dispatch({\n      type: FETCH_DATA_SUCCESS,\n      payload: response.data.text\n    });\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: FETCH_DATA_FAIL,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["/Users/allie-rae/Desktop/Lambda/cat-facts-app/React-Redux-App/src/actions/index.js"],"names":["axios","FETCHING_CAT_DATA","FETCH_DATA_SUCCESS","FETCH_DATA_FAIL","getCatFact","dispatch","type","get","then","response","console","log","payload","data","text","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAGP,OAAO,MAAMC,UAAU,GAAG,MAAMC,QAAQ,IAAI;AACxCA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEL;AAAP,GAAD,CAAR;AACAD,EAAAA,KAAK,CAACO,GAAN,CAAU,kFAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAAuBJ,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ,kBAAP;AAA2BU,MAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAAlD,KAAD,CAAR;AAAkE,GAD5G,EAECC,KAFD,CAEOC,GAAG,IAAI;AAACN,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AAAkBX,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEH,eAAP;AAAwBS,MAAAA,OAAO,EAAEI;AAAjC,KAAD,CAAR;AAAgD,GAFjF;AAGH,CALM","sourcesContent":["import axios from 'axios'\n\nexport const FETCHING_CAT_DATA = \"FETCHING_CAT_DATA\"\nexport const FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\"\nexport const FETCH_DATA_FAIL = \"FETCH_DATA_FAIL\"\n\n\nexport const getCatFact = () => dispatch => {\n    dispatch({type: FETCHING_CAT_DATA})\n    axios.get('https://cors-anywhere.herokuapp.com/https://cat-fact.herokuapp.com/facts/random/')\n    .then(response => {console.log(response); dispatch({type: FETCH_DATA_SUCCESS, payload: response.data.text})})\n    .catch(err => {console.log(err); dispatch({type: FETCH_DATA_FAIL, payload: err})})\n}\n"]},"metadata":{},"sourceType":"module"}